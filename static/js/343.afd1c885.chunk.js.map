{"version":3,"file":"static/js/343.afd1c885.chunk.js","mappings":"uRAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2L,SCAVE,EAAa,SAAC,GAAiB,IAAD,IAAdC,EAAc,EAAdA,QAGrBC,EAAM,qBADKC,EAAAA,EAAAA,MACOC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2BJ,EAAQI,KAC/C,OACE,0BACE,SAACR,EAAD,CAAYS,GAAIJ,EAAhB,wBAGL,E,QCVYK,EAAYT,EAAAA,GAAAA,IAAH,+EAKTU,EAAaV,EAAAA,GAAAA,GAAH,mEAKVW,EAAaX,EAAAA,GAAAA,IAAH,+CAIVY,EAAYZ,EAAAA,GAAAA,IAAH,uEAKTa,EAAgBb,EAAAA,GAAAA,IAAH,6DAIbc,EAAad,EAAAA,GAAAA,GAAH,0CAIVe,EAAaf,EAAAA,GAAAA,GAAH,wGClBVgB,EAAgB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtBC,EAA0BC,EAAAA,EAAAA,aAAZC,EAAYD,EAAAA,EAAAA,QAElC,OACE,iCACE,UAACV,EAAD,YACE,SAACE,EAAD,WACE,gBACEU,IACEJ,EAAaK,YAAb,UACOJ,EADP,eAC0BD,EAAaK,aACnCF,EAENG,IAAKN,EAAaO,eAClBC,MAAM,aAGV,UAACb,EAAD,YACE,SAACF,EAAD,qBACOO,EAAaO,eADpB,aACuC,IAAIE,KACvCT,EAAaU,cACbC,cAHJ,QAKA,wCAAgBC,KAAKC,MAAkC,GAA5Bb,EAAac,cAAxC,QACA,sCACA,uBAAId,EAAae,YAEjB,4BACE,oCACA,SAAClB,EAAD,UACGG,EAAagB,OAAOC,KAAI,SAAAC,GAAI,OAC3B,SAACpB,EAAD,UAA2BoB,EAAKC,MAAfD,EAAKE,GADK,gBAOrC,UAACxB,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASL,GAAG,OAAO8B,SAAO,EAA1B,qBAIF,yBACE,SAAC,KAAD,CAAS9B,GAAG,UAAU8B,SAAO,EAA7B,8BAMN,SAAC,KAAD,MAGL,E,SC9BD,EA9BqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOxB,EAAP,KAAqByB,EAArB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA8BH,EAAAA,EAAAA,UAAS,IAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACMC,GAAW1C,EAAAA,EAAAA,MAEX2C,EAAa,mCAAG,+FACdC,EADc,gBACQV,GADR,UAEGW,EAAAA,EAAAA,GAAWD,GAFd,gBAEZE,EAFY,EAEZA,KACRT,EAAgBS,GAChBP,GAAa,GAJO,2CAAH,qDAanB,OANAQ,EAAAA,EAAAA,YAAU,WACRJ,IACAF,EAAWC,EAASzC,MAErB,GAAE,KAGD,iCACE,SAACJ,EAAD,CAAYC,QAAS0C,IACpBF,IACC,SAAC3B,EAAD,CAAeC,aAAcA,EAAc0B,UAAWA,MAI7D,C","sources":["components/ButtonBack/ButtonBack.styled.jsx","components/ButtonBack/ButtonBack.jsx","components/DetailContent/DetailContent.styled.jsx","components/DetailContent/DetailContent.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonLink = styled(Link)`\n  display: inline-block;\n  margin: 10px 0;\n  padding: 8px 16px;\n  text-decoration: none;\n  font-weight: 500;\n  color: #144470;\n  background-color: #c4c4c4;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { ButtonLink } from './ButtonBack.styled';\n\nexport const ButtonBack = ({ defLink }) => {\n  //console.log('Button', defLink.from);\n  const location = useLocation();\n  const defRef = location.state?.from ?? defLink.from;\n  return (\n    <div>\n      <ButtonLink to={defRef}> Go Back </ButtonLink>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieWrap = styled.div`\n  display: flex;\n  border-bottom: 1px solid #b3b3b3;\n`;\n\nexport const HeaderPage = styled.h1`\n  margin-left: 20px;\n  font-weight: 500;\n`;\n\nexport const ImageBlock = styled.div`\n  margin-right: 20px;\n`;\n\nexport const TextBlock = styled.div`\n  //margin-left: 20px;\n  //font-weight: 500;\n`;\n\nexport const AddationBlock = styled.div`\n  border-bottom: 1px solid #b3b3b3;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n`;\n\nexport const GenresItem = styled.li`\n  list-style-type: none;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n","import { NavLink, Outlet } from 'react-router-dom';\nimport { defaultStaticPath } from '../../routerPaths/paths';\nimport {\n  AddationBlock,\n  GenresItem,\n  GenresList,\n  HeaderPage,\n  ImageBlock,\n  MovieWrap,\n  TextBlock,\n} from './DetailContent.styled';\nexport const DetailContent = ({ detailsMovie }) => {\n  const { tmdbImageSrv, noImage } = defaultStaticPath;\n\n  return (\n    <>\n      <MovieWrap>\n        <ImageBlock>\n          <img\n            src={\n              detailsMovie.poster_path\n                ? `${tmdbImageSrv}w300${detailsMovie.poster_path}`\n                : noImage\n            }\n            alt={detailsMovie.original_title}\n            width=\"300px\"\n          />\n        </ImageBlock>\n        <TextBlock>\n          <HeaderPage>\n            {` ${detailsMovie.original_title} (${new Date(\n              detailsMovie.release_date\n            ).getFullYear()})`}\n          </HeaderPage>\n          <p>User score: {Math.trunc(detailsMovie.vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{detailsMovie.overview}</p>\n\n          <div>\n            <h2>Genres</h2>\n            <GenresList>\n              {detailsMovie.genres.map(item => (\n                <GenresItem key={item.id}>{item.name}</GenresItem>\n              ))}\n            </GenresList>\n          </div>\n        </TextBlock>\n      </MovieWrap>\n      <AddationBlock>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" replace>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" replace>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </AddationBlock>\n      <Outlet />\n    </>\n  );\n};\n","import { getDataApi } from 'components/Api/Api';\nimport { ButtonBack } from 'components/ButtonBack/ButtonBack';\nimport { DetailContent } from 'components/DetailContent/DetailContent';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [detailsMovie, setDetailsMovie] = useState('');\n  const [isReplied, setIsReplied] = useState(false);\n  const [rezLink, setRezLink] = useState('');\n  const location = useLocation();\n\n  const getDetailData = async () => {\n    const apiRequest = `movie/${movieId}`;\n    const { data } = await getDataApi(apiRequest);\n    setDetailsMovie(data);\n    setIsReplied(true);\n  };\n\n  useEffect(() => {\n    getDetailData();\n    setRezLink(location.state);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <ButtonBack defLink={rezLink} />\n      {isReplied && (\n        <DetailContent detailsMovie={detailsMovie} isReplied={isReplied} />\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["ButtonLink","styled","Link","ButtonBack","defLink","defRef","useLocation","state","from","to","MovieWrap","HeaderPage","ImageBlock","TextBlock","AddationBlock","GenresList","GenresItem","DetailContent","detailsMovie","tmdbImageSrv","defaultStaticPath","noImage","src","poster_path","alt","original_title","width","Date","release_date","getFullYear","Math","trunc","vote_average","overview","genres","map","item","name","id","replace","movieId","useParams","useState","setDetailsMovie","isReplied","setIsReplied","rezLink","setRezLink","location","getDetailData","apiRequest","getDataApi","data","useEffect"],"sourceRoot":""}