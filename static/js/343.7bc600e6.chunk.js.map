{"version":3,"file":"static/js/343.7bc600e6.chunk.js","mappings":"8QAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2L,SCDVE,EAAa,WACxB,OACE,0BACE,SAACH,EAAD,CAAYI,GAAG,IAAf,wBAGL,E,0BCNYC,EAAYJ,EAAAA,GAAAA,IAAH,+EAKTK,EAAaL,EAAAA,GAAAA,GAAH,mEAKVM,EAAaN,EAAAA,GAAAA,IAAH,+CAIVO,EAAYP,EAAAA,GAAAA,IAAH,uEAKTQ,EAAgBR,EAAAA,GAAAA,IAAH,6DAIbS,EAAaT,EAAAA,GAAAA,GAAH,0CAIVU,EAAaV,EAAAA,GAAAA,GAAH,wGCjBVW,EAAgB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtBC,EAA0BC,EAAAA,EAAAA,aAAZC,EAAYD,EAAAA,EAAAA,QAMlC,OALAE,QAAQC,IAAI,eAAgBL,GAE5BI,QAAQC,IAAI,eAAgBJ,EAAc,YAAaE,GACvDC,QAAQC,IAAI,UAAUC,EAAAA,EAAAA,QAGpB,iCACE,UAACd,EAAD,YACE,SAACE,EAAD,WACE,gBACEa,IACEP,EAAaQ,YAAb,UACOP,EADP,eAC0BD,EAAaQ,aACnCL,EAENM,IAAKT,EAAaU,eAClBC,MAAM,aAGV,UAAChB,EAAD,YACE,SAACF,EAAD,qBACOO,EAAaU,eADpB,aACuC,IAAIE,KACvCZ,EAAaa,cACbC,cAHJ,QAKA,wCAAgBC,KAAKC,MAAkC,GAA5BhB,EAAaiB,cAAxC,QACA,sCACA,uBAAIjB,EAAakB,YAEjB,4BACE,oCACA,SAACrB,EAAD,UACGG,EAAamB,OAAOC,KAAI,SAAAC,GAAI,OAC3B,SAACvB,EAAD,UAA2BuB,EAAKC,MAAfD,EAAKE,GADK,gBAOrC,UAAC3B,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASL,GAAG,OAAOiC,SAAO,EAA1B,qBAIF,yBACE,SAAC,KAAD,CAASjC,GAAG,UAAUiC,SAAO,EAA7B,8BAMN,SAAC,KAAD,MAGL,E,SCrCD,EA5BqB,WACnBpB,QAAQC,IAAI,KACZ,IAAQoB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAO3B,EAAP,KAAqB4B,EAArB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,mCAAG,+FACdC,EADc,gBACQP,GADR,UAEGQ,EAAAA,EAAAA,GAAWD,GAFd,gBAEZE,EAFY,EAEZA,KACRN,EAAgBM,GAChBJ,GAAa,GAJO,2CAAH,qDAYnB,OALAK,EAAAA,EAAAA,YAAU,WACRJ,GAED,GAAE,KAGD,iCACE,SAACzC,EAAD,IACCuC,IACC,SAAC9B,EAAD,CAAeC,aAAcA,EAAc6B,UAAWA,MAI7D,C","sources":["components/ButtonBack/ButtonBack.styled.jsx","components/ButtonBack/ButtonBack.jsx","components/DetailContent/DetailContent.styled.jsx","components/DetailContent/DetailContent.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonLink = styled(Link)`\n  display: inline-block;\n  margin: 10px 0;\n  padding: 8px 16px;\n  text-decoration: none;\n  font-weight: 500;\n  color: #144470;\n  background-color: #c4c4c4;\n`;\n","import { ButtonLink } from './ButtonBack.styled';\n\nexport const ButtonBack = () => {\n  return (\n    <div>\n      <ButtonLink to=\"/\"> Go Back </ButtonLink>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieWrap = styled.div`\n  display: flex;\n  border-bottom: 1px solid #b3b3b3;\n`;\n\nexport const HeaderPage = styled.h1`\n  margin-left: 20px;\n  font-weight: 500;\n`;\n\nexport const ImageBlock = styled.div`\n  margin-right: 20px;\n`;\n\nexport const TextBlock = styled.div`\n  //margin-left: 20px;\n  //font-weight: 500;\n`;\n\nexport const AddationBlock = styled.div`\n  border-bottom: 1px solid #b3b3b3;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n`;\n\nexport const GenresItem = styled.li`\n  list-style-type: none;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { defaultStaticPath } from '../../routerPaths/paths';\nimport {\n  AddationBlock,\n  GenresItem,\n  GenresList,\n  HeaderPage,\n  ImageBlock,\n  MovieWrap,\n  TextBlock,\n} from './DetailContent.styled';\nexport const DetailContent = ({ detailsMovie }) => {\n  const { tmdbImageSrv, noImage } = defaultStaticPath;\n  console.log('detailsMovie', detailsMovie);\n\n  console.log('tmdbImageSrv', tmdbImageSrv, ' noImage ', noImage);\n  console.log('nanoid', nanoid());\n\n  return (\n    <>\n      <MovieWrap>\n        <ImageBlock>\n          <img\n            src={\n              detailsMovie.poster_path\n                ? `${tmdbImageSrv}w300${detailsMovie.poster_path}`\n                : noImage\n            }\n            alt={detailsMovie.original_title}\n            width=\"300px\"\n          />\n        </ImageBlock>\n        <TextBlock>\n          <HeaderPage>\n            {` ${detailsMovie.original_title} (${new Date(\n              detailsMovie.release_date\n            ).getFullYear()})`}\n          </HeaderPage>\n          <p>User score: {Math.trunc(detailsMovie.vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{detailsMovie.overview}</p>\n\n          <div>\n            <h2>Genres</h2>\n            <GenresList>\n              {detailsMovie.genres.map(item => (\n                <GenresItem key={item.id}>{item.name}</GenresItem>\n              ))}\n            </GenresList>\n          </div>\n        </TextBlock>\n      </MovieWrap>\n      <AddationBlock>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" replace>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" replace>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </AddationBlock>\n      <Outlet />\n    </>\n  );\n};\n","import { getDataApi } from 'components/Api/Api';\nimport { ButtonBack } from 'components/ButtonBack/ButtonBack';\nimport { DetailContent } from 'components/DetailContent/DetailContent';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  console.log('1');\n  const { movieId } = useParams();\n  const [detailsMovie, setDetailsMovie] = useState('');\n  const [isReplied, setIsReplied] = useState(false);\n\n  const getDetailData = async () => {\n    const apiRequest = `movie/${movieId}`;\n    const { data } = await getDataApi(apiRequest);\n    setDetailsMovie(data);\n    setIsReplied(true);\n  };\n\n  useEffect(() => {\n    getDetailData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <ButtonBack />\n      {isReplied && (\n        <DetailContent detailsMovie={detailsMovie} isReplied={isReplied} />\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["ButtonLink","styled","Link","ButtonBack","to","MovieWrap","HeaderPage","ImageBlock","TextBlock","AddationBlock","GenresList","GenresItem","DetailContent","detailsMovie","tmdbImageSrv","defaultStaticPath","noImage","console","log","nanoid","src","poster_path","alt","original_title","width","Date","release_date","getFullYear","Math","trunc","vote_average","overview","genres","map","item","name","id","replace","movieId","useParams","useState","setDetailsMovie","isReplied","setIsReplied","getDetailData","apiRequest","getDataApi","data","useEffect"],"sourceRoot":""}