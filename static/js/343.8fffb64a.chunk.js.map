{"version":3,"file":"static/js/343.8fffb64a.chunk.js","mappings":"gSAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2L,SCCVE,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,IACdD,EAAW,oBAACJ,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,IAErC,GAAE,KAGD,0BACE,SAACX,EAAD,CAAYY,GAAIL,EAAhB,wBAGL,E,QChBYM,EAAYZ,EAAAA,GAAAA,IAAH,+EAKTa,EAAab,EAAAA,GAAAA,GAAH,mEAKVc,EAAad,EAAAA,GAAAA,IAAH,+CAIVe,EAAYf,EAAAA,GAAAA,IAAH,uEAKTgB,EAAgBhB,EAAAA,GAAAA,IAAH,6DAIbiB,EAAajB,EAAAA,GAAAA,GAAH,0CAIVkB,EAAalB,EAAAA,GAAAA,GAAH,wGCjBVmB,EAAgB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC9B,GAAwCf,EAAAA,EAAAA,UAAS,IAAjD,eAAOgB,EAAP,KAAqBC,EAArB,KACA,GAA8BjB,EAAAA,EAAAA,UAAS,IAAvC,eAAOkB,EAAP,KAAgBC,EAAhB,KAOA,OANAhB,EAAAA,EAAAA,YAAU,WACRc,EAAgBG,EAAAA,EAAAA,cAChBD,EAAWC,EAAAA,EAAAA,QAEZ,GAAE,KAGD,iCACE,UAACb,EAAD,YACE,SAACE,EAAD,WACE,gBACEY,IACEN,EAAaO,YAAb,UACON,EADP,eAC0BD,EAAaO,aACnCJ,EAENK,IAAKR,EAAaS,eAClBC,MAAM,aAGV,UAACf,EAAD,YACE,SAACF,EAAD,qBACOO,EAAaS,eADpB,aACuC,IAAIE,KACvCX,EAAaY,cACbC,cAHJ,QAKA,wCAAgBC,KAAKC,MAAkC,GAA5Bf,EAAagB,cAAxC,QACA,sCACA,uBAAIhB,EAAaiB,YAEjB,4BACE,oCACA,SAACpB,EAAD,UACGG,EAAakB,OAAOC,KAAI,SAAAC,GAAI,OAC3B,SAACtB,EAAD,UAA2BsB,EAAKC,MAAfD,EAAKE,GADK,gBAOrC,UAAC1B,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASL,GAAG,OAAOgC,SAAO,EAA1B,qBAIF,yBACE,SAAC,KAAD,CAAShC,GAAG,UAAUgC,SAAO,EAA7B,8BAMN,SAAC,KAAD,MAGL,ECxCD,EA3BqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCvC,EAAAA,EAAAA,UAAS,IAAjD,eAAOe,EAAP,KAAqB0B,EAArB,KACA,GAAkCzC,EAAAA,EAAAA,WAAS,GAA3C,eAAO0C,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,mCAAG,+FACdC,EADc,gBACQN,GADR,UAEGO,EAAAA,EAAAA,GAAWD,GAFd,gBAEZE,EAFY,EAEZA,KACRN,EAAgBM,GAChBJ,GAAa,GAJO,2CAAH,qDAYnB,OALAxC,EAAAA,EAAAA,YAAU,WACRyC,GAED,GAAE,KAGD,iCACE,SAAC/C,EAAD,IACC6C,IACC,SAAC5B,EAAD,CAAeC,aAAcA,EAAc2B,UAAWA,MAI7D,C","sources":["components/ButtonBack/ButtonBack.styled.jsx","components/ButtonBack/ButtonBack.jsx","components/DetailContent/DetailContent.styled.jsx","components/DetailContent/DetailContent.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonLink = styled(Link)`\n  display: inline-block;\n  margin: 10px 0;\n  padding: 8px 16px;\n  text-decoration: none;\n  font-weight: 500;\n  color: #144470;\n  background-color: #c4c4c4;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ButtonLink } from './ButtonBack.styled';\n\nexport const ButtonBack = () => {\n  const location = useLocation();\n  const [backLink, setBackLink] = useState('');\n\n  useEffect(() => {\n    setBackLink(location.state?.from ?? '/');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <ButtonLink to={backLink}> Go Back </ButtonLink>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieWrap = styled.div`\n  display: flex;\n  border-bottom: 1px solid #b3b3b3;\n`;\n\nexport const HeaderPage = styled.h1`\n  margin-left: 20px;\n  font-weight: 500;\n`;\n\nexport const ImageBlock = styled.div`\n  margin-right: 20px;\n`;\n\nexport const TextBlock = styled.div`\n  //margin-left: 20px;\n  //font-weight: 500;\n`;\n\nexport const AddationBlock = styled.div`\n  border-bottom: 1px solid #b3b3b3;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n`;\n\nexport const GenresItem = styled.li`\n  list-style-type: none;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { defaultStaticPath } from '../../routerPaths/paths';\nimport {\n  AddationBlock,\n  GenresItem,\n  GenresList,\n  HeaderPage,\n  ImageBlock,\n  MovieWrap,\n  TextBlock,\n} from './DetailContent.styled';\nexport const DetailContent = ({ detailsMovie }) => {\n  const [tmdbImageSrv, setTmdbImageSrv] = useState('');\n  const [noImage, setNoImage] = useState('');\n  useEffect(() => {\n    setTmdbImageSrv(defaultStaticPath.tmdbImageSrv);\n    setNoImage(defaultStaticPath.noImage);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <MovieWrap>\n        <ImageBlock>\n          <img\n            src={\n              detailsMovie.poster_path\n                ? `${tmdbImageSrv}w300${detailsMovie.poster_path}`\n                : noImage\n            }\n            alt={detailsMovie.original_title}\n            width=\"300px\"\n          />\n        </ImageBlock>\n        <TextBlock>\n          <HeaderPage>\n            {` ${detailsMovie.original_title} (${new Date(\n              detailsMovie.release_date\n            ).getFullYear()})`}\n          </HeaderPage>\n          <p>User score: {Math.trunc(detailsMovie.vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{detailsMovie.overview}</p>\n\n          <div>\n            <h2>Genres</h2>\n            <GenresList>\n              {detailsMovie.genres.map(item => (\n                <GenresItem key={item.id}>{item.name}</GenresItem>\n              ))}\n            </GenresList>\n          </div>\n        </TextBlock>\n      </MovieWrap>\n      <AddationBlock>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" replace>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" replace>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </AddationBlock>\n      <Outlet />\n    </>\n  );\n};\n","import { getDataApi } from 'components/Api/Api';\nimport { ButtonBack } from 'components/ButtonBack/ButtonBack';\nimport { DetailContent } from 'components/DetailContent/DetailContent';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [detailsMovie, setDetailsMovie] = useState('');\n  const [isReplied, setIsReplied] = useState(false);\n\n  const getDetailData = async () => {\n    const apiRequest = `movie/${movieId}`;\n    const { data } = await getDataApi(apiRequest);\n    setDetailsMovie(data);\n    setIsReplied(true);\n  };\n\n  useEffect(() => {\n    getDetailData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <ButtonBack />\n      {isReplied && (\n        <DetailContent detailsMovie={detailsMovie} isReplied={isReplied} />\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["ButtonLink","styled","Link","ButtonBack","location","useLocation","useState","backLink","setBackLink","useEffect","state","from","to","MovieWrap","HeaderPage","ImageBlock","TextBlock","AddationBlock","GenresList","GenresItem","DetailContent","detailsMovie","tmdbImageSrv","setTmdbImageSrv","noImage","setNoImage","defaultStaticPath","src","poster_path","alt","original_title","width","Date","release_date","getFullYear","Math","trunc","vote_average","overview","genres","map","item","name","id","replace","movieId","useParams","setDetailsMovie","isReplied","setIsReplied","getDetailData","apiRequest","getDataApi","data"],"sourceRoot":""}